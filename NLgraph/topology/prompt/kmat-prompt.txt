To find a topological sort in a directed graph, you can follow the following steps:
1. Identify all the nodes in the given graph.
2. Construct an adjacency matrix A. And let the diagonal elements of A be 1.
3. Calculate A^n, by do A:=A*A log(n) times, here n is the number of nodes. After each iteration, you can let each element take the minimum between 1 and it.
4. Let b(i) be the number of 0s in row i.
5. The topological order is just the ascending order of b.

In a directed graph with 5 nodes numbered from 0 to 4:
node 0 should be visited before node 4
node 0 should be visited before node 1
node 2 should be visited before node 1
node 3 should be visited before node 2
Q: Can all the nodes be visited? Give the solution.
A: We can construct the graph: (0,4), (0,1), (2,1), (3,2), then we can write the adjacency matrix:
A={{1, 1, 0, 0, 1}, {0, 1, 0, 0, 0}, {0, 1, 1, 0, 0}, {0, 0, 1, 1, 0}, {0, 0, 0, 0, 1}}
We will square the matrix and clip to [0,1], with log(5)=3 times:
A1={{1, 1, 0, 0, 1}, {0, 1, 0, 0, 0}, {0, 1, 1, 0, 0}, {0, 1, 1, 1, 0}, {0, 0, 0, 0, 1}}
A2={{1, 1, 0, 0, 1}, {0, 1, 0, 0, 0}, {0, 1, 1, 0, 0}, {0, 1, 1, 1, 0}, {0, 0, 0, 0, 1}}
A3={{1, 1, 0, 0, 1}, {0, 1, 0, 0, 0}, {0, 1, 1, 0, 0}, {0, 1, 1, 1, 0}, {0, 0, 0, 0, 1}}
Then we can calculate b:
b(0)=3, b(1)=1, b(2)=2, b(3)=3, b(4)=1
Then we can write the topological order by ascending order of b:
0, 3, 2, 1, 4